/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'operador' at '14/12/16 11:18' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven{
        url "http://central.maven.org/maven2/"
    }
}

buildscript {
    repositories {
        maven{
            url "http://central.maven.org/maven2/"
        }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:1.8.20")
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'net.serenity-bdd:serenity-core:1.8.20'
    compile 'net.serenity-bdd:serenity-junit:1.8.20'
    compile 'net.serenity-bdd:serenity-cucumber:1.6.10'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.

}

gradle.startParameter.continueOnFailure = true // Allow build to continue on test failure

test {
    systemProperties System.getProperties()
    testLogging.showStandardStreams = true
    include "com/testRunner/RenfeTestRunner.class"
}
